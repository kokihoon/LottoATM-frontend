{"version":3,"file":"static/development/pages/_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./action/action-helper.ts","webpack:///./action/auth.ts","webpack:///./api/auth.ts","webpack:///./api/index.ts","webpack:///./constants/actionTypes.ts","webpack:///./pages/_app.tsx","webpack:///./saga/auth.ts","webpack:///./saga/index.ts","webpack:///./store/auth/index.tsx","webpack:///./store/configureStore.ts","webpack:///./store/index.ts","webpack:///./utils/localStorage.ts","webpack:///external \"axios\"","webpack:///external \"immer\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-saga\"","webpack:///external \"redux-saga/effects\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export interface Action<T extends string> {\n  type: T;\n}\n\nexport interface ActionWithPayload<T extends string, P> extends Action<T> {\n  payload: P;\n}\n\nexport function createAction<T extends string>(type: T): Action<T>;\n\nexport function createAction<T extends string, P>(\n  type: T,\n  payload: P\n): ActionWithPayload<T, P>;\n\nexport function createAction<T extends string, P>(type: T, payload?: P) {\n  return payload === undefined ? { type } : { type, payload };\n}\n","import {\n  POST_LOGIN,\n  POST_LOGOUT,\n  SET_LOGGED_INFO,\n  POST_SIGNUP,\n  REQUEST,\n  SUCCESS,\n  FAILURE\n} from \"../constants/actionTypes\";\nimport { createAction } from \"./action-helper\";\nimport { IAuthUser, IAuthLogin, IAuthSignUp } from \"../model/user\";\nimport { ActionsUnion } from \"./types\";\n\nexport const loginActions = {\n  loginRequest: (payload: IAuthLogin): any =>\n    createAction(POST_LOGIN[REQUEST], payload),\n  loginSuccess: (payload: IAuthUser): any =>\n    createAction(POST_LOGIN[SUCCESS], payload),\n  loginFailure: (): any => createAction(POST_LOGIN[FAILURE])\n};\n\nexport const signUpActions = {\n  signUpRequest: (payload: IAuthSignUp): any =>\n    createAction(POST_SIGNUP[REQUEST], payload),\n  signUpSuccess: (): any => createAction(POST_SIGNUP[SUCCESS]),\n  signUpFailure: (): any => createAction(POST_SIGNUP[FAILURE])\n};\n\nexport const setLoggedAction = () => createAction(SET_LOGGED_INFO);\nexport const logout = () => ({ type: POST_LOGOUT });\n\nexport type Login = ReturnType<typeof loginActions.loginRequest>;\nexport type Logout = ReturnType<typeof logout>;\nexport type SetLoggedInfo = ReturnType<typeof setLoggedAction>;\nexport type SignUp = ReturnType<typeof signUpActions.signUpRequest>;\n\nexport type AuthAction =\n  | ActionsUnion<typeof loginActions>\n  | Logout\n  | SetLoggedInfo\n  | SignUp;\n","import Api from \"./index\";\nimport { IAuthLogin, IAuthSignUp } from \"../model/user\";\n\nexport const postLogin = async (payload: IAuthLogin) => {\n  return await Api.post(\"/signin\", payload);\n};\n\nexport const postSignUp = async (payload: IAuthSignUp) => {\n  return await Api.post(\"/signup\", payload);\n};\n","import axios from \"axios\";\n\nconst Api = axios.create({\n  baseURL: \"http://localhost:8080/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: \"\"\n  }\n});\n\nexport default Api;\n","export const REQUEST = \"REQUEST\";\nexport const SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\n\ninterface createRequestTypes {\n  [key: string]: string;\n}\n\nfunction createRequestTypes(base: string): createRequestTypes {\n  return [REQUEST, SUCCESS, FAILURE].reduce(\n    (acc: createRequestTypes, type: string) => {\n      acc[type] = `${base}_${type}`;\n      return acc;\n    },\n    {}\n  );\n}\n\n// Auth\nexport const POST_LOGIN = createRequestTypes(\"POST_LOGIN\");\nexport const POST_LOGOUT = \"POST_LOGOUT\";\nexport const SET_LOGGED_INFO = \"SET_LOGGED_INFO\";\nexport const POST_SIGNUP = createRequestTypes(\"POST_SIGNUP\");\n","import { NextComponentType } from \"next\";\nimport { AppContext, AppInitialProps, AppProps } from \"next/app\";\nimport \"../styles/reset.css\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"../store/configureStore\";\n\nconst store = configureStore();\n\nconst LottoATM: NextComponentType<AppContext, AppInitialProps, AppProps> = ({\n  Component,\n  pageProps\n}) => {\n  return (\n    <Provider store={store}>\n      <Component {...pageProps} />\n    </Provider>\n  );\n};\n\nLottoATM.getInitialProps = async ({\n  Component,\n  ctx\n}: AppContext): Promise<AppInitialProps> => {\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  return { pageProps };\n};\n\nexport default LottoATM;\n","import { all, fork, call, take, put } from \"redux-saga/effects\";\nimport { postLogin, postSignUp } from \"../api/auth\";\nimport {\n  AuthAction,\n  Login,\n  loginActions,\n  setLoggedAction,\n  SetLoggedInfo,\n  SignUp,\n  signUpActions\n} from \"../action/auth\";\nimport * as types from \"../constants/actionTypes\";\nimport localStorage from \"../utils/localStorage\";\n\n// 로그인\nexport function* fetchLogin(action: Login) {\n  try {\n    console.log(action.payload);\n    const { data } = yield call(postLogin, action.payload);\n    localStorage.set(\"USER-KEY\", data.access);\n    yield put<AuthAction>(loginActions.loginSuccess(data));\n  } catch (error) {\n    yield put<AuthAction>(loginActions.loginFailure());\n  }\n}\n\nfunction* watchFetchLogin() {\n  while (true) {\n    const action: AuthAction = yield take(types.POST_LOGIN[types.REQUEST]);\n    yield fork(fetchLogin, action);\n  }\n}\n\n// 회원가입\nexport function* fetchSignUp(action: SignUp) {\n  try {\n    console.log(action.payload);\n    const { data } = yield call(postSignUp, action.payload);\n    yield put<AuthAction>(signUpActions.signUpSuccess());\n  } catch (error) {\n    yield put<AuthAction>(signUpActions.signUpFailure());\n  }\n}\n\nfunction* watchFetchSignUp() {\n  while (true) {\n    const action: AuthAction = yield take(types.POST_SIGNUP[types.REQUEST]);\n    yield fork(fetchSignUp, action);\n  }\n}\n\nexport default function* root() {\n  yield all([fork(watchFetchLogin), fork(watchFetchSignUp)]);\n\n  const token = localStorage.get(\"USER-KEY\");\n\n  if (token) {\n    yield put<SetLoggedInfo>(setLoggedAction());\n  }\n}\n","import { all, fork } from \"redux-saga/effects\";\nimport authSaga from \"./auth\";\n\nexport default function* rootSaga() {\n  yield all([fork(authSaga)]);\n}\n","import produce from \"immer\";\nimport { AuthAction } from \"../../action/auth\";\nimport {\n  POST_LOGIN,\n  POST_LOGOUT,\n  SET_LOGGED_INFO,\n  POST_SIGNUP,\n  REQUEST,\n  SUCCESS,\n  FAILURE\n} from \"../../constants/actionTypes\";\n\nimport { IAuthUser, IAuthLogin, IAuthSignUp } from \"../../model/user\";\n\nexport interface IAuthState {\n  user: IAuthUser;\n  login: IAuthLogin;\n  signup: IAuthSignUp;\n}\n\nconst initialState: IAuthState = {\n  user: {\n    error: \"\",\n    isLoggedIn: false,\n    userInfo: {\n      user_id: -1,\n      email: \"\",\n      nickname: \"\"\n    }\n  },\n  login: {\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    authStatus: \"INIT\",\n    error: \"\"\n  },\n  signup: {\n    error: \"\",\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    authStatus: \"INIT\"\n  }\n};\n\nconst authReducer = (state = initialState, action: AuthAction): IAuthState => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case POST_LOGIN[REQUEST]: {\n        draft.login.authStatus = \"FETCHING\";\n        draft.login.error = \"\";\n        return draft;\n      }\n      case POST_LOGIN[SUCCESS]: {\n        draft.login.authStatus = \"SUCCESS\";\n        draft.user.userInfo = action.payload;\n        draft.user.isLoggedIn = true;\n        return draft;\n      }\n      case POST_LOGIN[FAILURE]: {\n        draft.login.authStatus = \"FAILTURE\";\n        draft.user.isLoggedIn = false;\n        draft.login.error = \"passwordError\";\n        return draft;\n      }\n      case POST_LOGOUT: {\n        draft.login.authStatus = \"INIT\";\n        draft.user.isLoggedIn = false;\n        draft.user.userInfo = initialState.user.userInfo;\n        return draft;\n      }\n      case SET_LOGGED_INFO: {\n        draft.user.isLoggedIn = true;\n        return draft;\n      }\n\n      case POST_SIGNUP[REQUEST]: {\n        draft.signup.authStatus = \"INIT\";\n        draft.login.error = \"\";\n        return draft;\n      }\n      case POST_SIGNUP[SUCCESS]: {\n        draft.signup.authStatus = \"SUCCESS\";\n        return draft;\n      }\n      case POST_SIGNUP[FAILURE]: {\n        draft.signup.authStatus = \"FAILTURE\";\n        draft.signup.error = \"Error\";\n        return draft;\n      }\n    }\n  });\n};\n\nexport default authReducer;\n","import { createStore, Store, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducers from \"./index\";\nimport rootSaga from \"../saga\";\n\n//saga 미들웨어 생성\nconst sagaMiddleware = createSagaMiddleware();\nconst middleWares = [sagaMiddleware];\n\nconst isDevelopment = process.env.NODE_ENV === \"development\";\n\n// 개발환경일때만 크롬 확장프로그램 추가\nconst devTools = \"\";\nconst composeEnhancers = devTools || compose;\n\nconst configureStore = (initialState?: object): Store => {\n  const store: Store = createStore(\n    rootReducers,\n    initialState!,\n    composeEnhancers(applyMiddleware(...middleWares))\n  );\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default configureStore;\n","import { combineReducers } from \"redux\";\nimport authReducer, { IAuthState } from \"./auth/\";\n\nexport interface IRootState {\n  auth: IAuthState;\n}\n\nconst rootReducer = combineReducers<IRootState>({\n  auth: authReducer\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","type LocalStorage = {\n  [key: string]: any;\n};\n\nconst st: LocalStorage = typeof localStorage === \"object\" ? localStorage : {};\n\ntype Storage = {\n  set(key: string, value: any): void;\n  get(key: string): any;\n  remove(key: string): void;\n  clear(): void;\n};\n\nconst storage: Storage = {\n  set(key, value) {\n    st[key] = JSON.stringify(value);\n  },\n  get(key) {\n    if (!st[key]) return null;\n    const value = st[key];\n    try {\n      const parsed = JSON.parse(value);\n      return parsed;\n    } catch (e) {\n      return value;\n    }\n  },\n  remove(key) {\n    delete st[key];\n  },\n  clear() {\n    if (st.clear) {\n      st.clear();\n    }\n  }\n};\n\nexport default storage;\n","module.exports = require(\"axios\");","module.exports = require(\"immer\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-saga\");","module.exports = require(\"redux-saga/effects\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAIA;AACA;AAEA;AAEA;AALA;AAQA;AACA;AAEA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAEA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAjBA;AACA;AAyBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA1CA;AA4CA;AACA;AACA;AACA;;;;;;;;;;;;AC/FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAAA;AASA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAwBA;;;;;;;;;;;;;;;;;;;;;;;ACrCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}